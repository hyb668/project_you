buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':ChatProject')
    compile 'com.android.support:multidex:1.0.0'
}

repositories {
    flatDir {
        dirs 'libs' //声明aar的所在的目录
    }
}


afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--multi-dex' // enable multidex

        // optional
        // dx.additionalParameters += "--main-dex-list=$projectDir/<filename>".toString() // enable the main-dex-list
    }
}

android {

    compileSdkVersion 19

    buildToolsVersion "19.1.0"

    defaultConfig {
        //	minSdkVersion Integer.parseInt(project.MIN_SDK_VERSION)
        //	targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        //	versionCode Integer.parseInt(project.VERSION_CODE)
        //	versionName project.VERSION_NAME
        minSdkVersion 14
        multiDexEnabled false
    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "2g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LGPL2.1'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }


    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        instrumentTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        release {
            storeFile file("youanmi.keystore")
            storePassword "uhbtgb"
            keyAlias "youanmi"
            keyPassword "uhbtgb"
        }

        debug{
            storeFile file("youanmi.keystore")
            storePassword "uhbtgb"
            keyAlias "youanmi"
            keyPassword "uhbtgb"
        }
    }

    buildTypes {

        release {
            debuggable true
            zipAlignEnabled true //zip对齐
            minifyEnabled true  //设置混淆
            shrinkResources true //删除多余的资源文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release //设置签名
        }

        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }


}
